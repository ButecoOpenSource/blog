<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>José Guilherme Vanz on Buteco Tecnológico</title>
    <link>https://butecotecnologico.com.br/autores/jvanz/</link>
    <description>Recent content in José Guilherme Vanz on Buteco Tecnológico</description><image>
      <url>https://butecotecnologico.com.br/logos/capybara_400_bg.png</url>
      <title>José Guilherme Vanz on Buteco Tecnológico</title>
      <link>https://butecotecnologico.com.br/autores/jvanz/</link>
    </image>
    
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-BR</language>
    <lastBuildDate>Thu, 31 Mar 2016 23:40:20 +0000</lastBuildDate><atom:link href="https://butecotecnologico.com.br/autores/jvanz/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Apache Mesos</title>
      <link>https://butecotecnologico.com.br/apache-mesos/</link>
      <pubDate>Thu, 31 Mar 2016 23:40:20 +0000</pubDate>
      
      <guid>https://butecotecnologico.com.br/apache-mesos/</guid>
      <description>&lt;p&gt;Nos últimos tempos vem se falando muito em computação na nuvem, computação distribuída, Linux containers, Big Data, etc. Junto com o crescimento dessas tecnologias também se observa o surgimento de inúmeras ferramentas para resolver os problemas encontrados nesta área da computação. Poderíamos citar várias, mas iremos falar brevemente sobre Apache Mesos. Não irei me aprofundar muito pois pretendo fazer mais artigos sobre o assunto detalhando mais em determinados tópicos.&lt;/p&gt;
&lt;p&gt;O Apache Mesos é considerado o &lt;em&gt;kernel&lt;/em&gt; de sistemas distribuídos. Ele foi criado com os mesmos princípios do &lt;em&gt;kernel&lt;/em&gt; Linux, só que em outro nível de abstração. O Mesos roda em todos os nós de &lt;em&gt;cluster&lt;/em&gt; e prove a &lt;em&gt;frameworks&lt;/em&gt; como Apache Spark, Hadoop, Cassandra, Kafka, Elastic Search e outros uma API para alocar recursos e rodarem suas &lt;em&gt;tasks&lt;/em&gt; através de todo o &lt;em&gt;cluster&lt;/em&gt; ou cloud. Em um Mesos &lt;em&gt;cluster&lt;/em&gt;, CPU, memória, disco e outros recursos computacionais de todas as máquinas, virtuais ou físicas, são abstraídos em um único &lt;em&gt;pool&lt;/em&gt; de recursos. Facilitando a criação e otimizando a utilização de sistemas distribuídos.&lt;/p&gt;</description>
      <image>
        <url>https://butecotecnologico.com.br/logos/capybara_400_bg.png</url>
        <title>José Guilherme Vanz on Buteco Tecnológico</title>
        <link>https://butecotecnologico.com.br/autores/jvanz/</link>
      </image>
      
      </item>
    
    <item>
      <title>Git: commit parcial de arquivos</title>
      <link>https://butecotecnologico.com.br/git-commit-parcial-de-arquivos/</link>
      <pubDate>Tue, 16 Feb 2016 21:08:42 +0000</pubDate>
      
      <guid>https://butecotecnologico.com.br/git-commit-parcial-de-arquivos/</guid>
      <description>&lt;p&gt;Neste post demonstrarei uma das muitas &lt;em&gt;features&lt;/em&gt; bacanas disponíveis no git, o &lt;em&gt;commit&lt;/em&gt; parcial de arquivos. Esta &lt;em&gt;feature&lt;/em&gt; permite ao usuário selecionar quais alterações de determinado arquivo devem ser commitados.&lt;/p&gt;</description>
      <image>
        <url>https://butecotecnologico.com.br/logos/capybara_400_bg.png</url>
        <title>José Guilherme Vanz on Buteco Tecnológico</title>
        <link>https://butecotecnologico.com.br/autores/jvanz/</link>
      </image>
      
      </item>
    
    <item>
      <title>Implemente seu malloc/free. Just4fun!</title>
      <link>https://butecotecnologico.com.br/implemente-seu-mallocfree-just4fun/</link>
      <pubDate>Thu, 03 Dec 2015 13:18:40 +0000</pubDate>
      
      <guid>https://butecotecnologico.com.br/implemente-seu-mallocfree-just4fun/</guid>
      <description>&lt;p&gt;Algum tempo atrás comprei o livro The Linux Programming Interface, um dos melhores livros que já adquiri. Um dos primeiros capítulos que li foi sobre alocação de memória. No final do capítulo, o autor oferece alguns exercícios. Entre eles existe um mais desafiador. Que é implementar funções equivalentes ao &lt;code&gt;malloc&lt;/code&gt; e &lt;code&gt;free&lt;/code&gt;. The challenge has been accepted!&lt;/p&gt;</description>
      <image>
        <url>https://butecotecnologico.com.br/logos/capybara_400_bg.png</url>
        <title>José Guilherme Vanz on Buteco Tecnológico</title>
        <link>https://butecotecnologico.com.br/autores/jvanz/</link>
      </image>
      
      </item>
    
    <item>
      <title>Recuperando dados perdidos do git-stash</title>
      <link>https://butecotecnologico.com.br/recuperando-dados-perdidos-do-git-stash/</link>
      <pubDate>Wed, 28 Oct 2015 21:29:14 +0000</pubDate>
      
      <guid>https://butecotecnologico.com.br/recuperando-dados-perdidos-do-git-stash/</guid>
      <description>&lt;p&gt;Olá senhores e senhoras! =]&lt;/p&gt;
&lt;p&gt;Em meu primeiro post no Buteco Open Source vou demonstrar como recuperar dados perdidos do git-stash. Talvez salvando muitas horas de trabalho que poderiam ser perdidas acidentalmente. Na realidade o método demonstrado neste artigo pode ser utilizado para  recuperar qualquer objeto git perdido. Antes de mais nada, enquanto você estiver implementando alguma grande &lt;em&gt;feature&lt;/em&gt;, quebre-a em pequenos pedaços e faça &lt;em&gt;commits&lt;/em&gt; regularmente. Não é uma boa ideia permanecer muito tempo sem &amp;ldquo;comitar&amp;rdquo;. Tenha cuidado.&lt;/p&gt;</description>
      <image>
        <url>https://butecotecnologico.com.br/logos/capybara_400_bg.png</url>
        <title>José Guilherme Vanz on Buteco Tecnológico</title>
        <link>https://butecotecnologico.com.br/autores/jvanz/</link>
      </image>
      
      </item>
    
  </channel>
</rss>

