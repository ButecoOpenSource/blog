<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>requests on Buteco Tecnológico</title>
    <link>https://butecotecnologico.com.br/tags/requests/</link>
    <description>Recent content in requests on Buteco Tecnológico</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-BR</language>
    <lastBuildDate>Fri, 19 Feb 2016 16:52:31 +0000</lastBuildDate>
    
	<atom:link href="https://butecotecnologico.com.br/tags/requests/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Gerando bitlink atravéz da API do Bitly</title>
      <link>https://butecotecnologico.com.br/gerando-bitlink-atravez-da-api-do-bitly/</link>
      <pubDate>Fri, 19 Feb 2016 16:52:31 +0000</pubDate>
      
      <guid>https://butecotecnologico.com.br/gerando-bitlink-atravez-da-api-do-bitly/</guid>
      <description>&lt;p&gt;Gerar link curto é uma tarefa um tanto quanto rotineira em determinados casos. Por exemplo, nós do blog usamos links curtos para compartilhar nossas publicações nas rede sociais.&lt;/p&gt;
&lt;p&gt;Bem, mas como fazer para gerar um link curto do &lt;a href=&#34;https://bitly.com/&#34; target=&#34;_blank&#34;&gt;Bitly&lt;/a&gt; via API e com um domínio customizado? Se você não reparou ainda, nossos links curtos são sempre com o domínio &lt;em&gt;buteco.me&lt;/em&gt;, ao invéz do tão popular &lt;em&gt;bit.ly&lt;/em&gt;. Se você se pergunta o porque de usar um outro domínio, bem a resposta é simples, isso ajuda na identidade visual de sua marca ou produto.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Utilizando a API REST do Docker com Python</title>
      <link>https://butecotecnologico.com.br/utilizando-a-api-rest-do-docker-com-python/</link>
      <pubDate>Tue, 27 Oct 2015 08:31:51 +0000</pubDate>
      
      <guid>https://butecotecnologico.com.br/utilizando-a-api-rest-do-docker-com-python/</guid>
      <description>&lt;p&gt;O Docker é uma plataforma para construir e executar aplicações distribuídas. Com ele é possível executar um &lt;em&gt;bash&lt;/em&gt; em um ambiente Debian mesmo estando dentro um Fedora, por exemplo. Seu funcionamento se assemelha ao de uma máquina virtual, mas as aplicações executadas no Docker estão de fato sendo executados no sistema &lt;em&gt;host&lt;/em&gt;, ou seja, não existe a camada de emulação.&lt;/p&gt;
&lt;p&gt;Isso se deve à utilização de &lt;em&gt;templates&lt;/em&gt; de imagens do Debian (existem imagens de sistemas inteiros, como Debian, Ubuntu, e também de aplicações, como Apache, MySQL e etc). Para mais informações sobre o Docker, basta verificar a &lt;a href=&#34;https://www.docker.com/&#34; target=&#34;_blank&#34;&gt;página&lt;/a&gt; do projeto.&lt;/p&gt;
&lt;p&gt;Este tutorial não tem como foco instalar o Docker, então antes de tudo, verifique como instalá-lo em sua distribuição. Após instalado, você precisará iniciá-lo através do &lt;em&gt;docker daemon&lt;/em&gt; para receber requisições HTTP, além das requisições por &lt;em&gt;socket&lt;/em&gt; (este é utilizado pelo &lt;em&gt;docker client&lt;/em&gt;). Antes de iniciá-lo com estas opções, você precisará ter certeza que o mesmo não esteja executando. Para tal, basta executar:&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>